{{define "import"}}import {{.}} from '../models/{{.}}'{{end -}}
{{define "arraytype"}}{{.Type | GetMappedType}}[]{{end -}}
{{define "dictionarytype"}}{[key in string]: {{.Type | GetMappedType}}}{{end -}}
{{define "type"}}{{if .IsArrayOfType}}{{template "arraytype" .}}{{else}}{{if .IsDictionaryOfType}}{{template "dictionarytype" .}}{{else}}{{.Type | GetMappedType}}{{end}}{{end}}{{end -}}
{{define "nullable"}}{{if .Nullable}}?{{end}}{{end -}}
{{define "parameter"}}{{.Name}}{{template "nullable" .}}{{end -}}
{{define "parameterwithtype"}}{{template "parameter" .}}: {{template "type" .}}{{end -}}
{{define "parameters"}}{{"{"}}{{range $index, $parameter := .}}{{if $index}}, {{end}}{{template "parameter" $parameter}}{{end}}{{"}"}}{{end -}}
{{define "parameterswithtype"}}{{range $index, $parameter := .}}{{if $index}}, {{end}}{{template "parameterwithtype" $parameter}}{{end}}{{end -}}
{{define "responsetype"}}{{if and . .Type }}<{{template "type" .}}{{template "nullable" .}}>{{end}}{{end -}}
{{define "responsetypewithpromise"}}{{if and . .Type }}<{{template "type" .}}{{template "nullable" .}}>{{else}}<void>{{end}}{{end -}}

import IHttpClientFactory from '../IHttpClientFactory'
{{range $import := .Imports}}{{template "import" $import}}
{{end}}
export default class {{.Name}}Client {
    private readonly httpClientFactory: IHttpClientFactory

    constructor(httpClientFactory: IHttpClientFactory) {
        this.httpClientFactory = httpClientFactory
    }
    {{range $method := .Methods}}
    public {{$method.Name}}Async = ({{template "parameterswithtype" .AllParameters}}): Promise{{template "responsetypewithpromise" .Response}} =>
        this.httpClientFactory
            .createClient(this.httpClientFactory.host)
            .{{$method.Method | ToLower}}{{template "responsetype" .Response}}(`{{$method.Url}}`
            {{- if .QueryParameters | len}}, {{template "parameters" .QueryParameters}}{{else}}
            {{- if or (eq $method.Method "GET") (not .RequestBody)}}{{else}}, null{{end}}{{end}}
            {{- if .RequestBody}}, {{template "parameter" .RequestBody}}{{end}})
{{end}}}